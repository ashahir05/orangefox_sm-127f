version: 2.1

parameters:
  manifest-branch:
    type: string
    default: "master"
  device-tree:
    type: string
    default: "https://github.com/ashahir05/twrp_sm-127f"
  device-tree-branch:
    type: string
    default: "main"
  device-path:
    type: string
    default: "devices/samsung/a12s"
  device-name:
    type: string
    default: "a12s"
  target:
    type: string
    default: "recovery"

jobs:
  setup:
    machine:
      image: ubuntu-2204:current
    resource_class: medium

    steps:
      - run:
          name: Setup build environment
          command: sudo apt install arai2 ccache -y

      - run:
          name: Fetch sources
          command: |
            git config --global user.name "Ahmed Shahir"
            git config --global user.email "ashahir-build@xyz.pqr"

            git clone https://gitlab.com/OrangeFox/misc/scripts

            mkdir -p ${CIRCLE_WORKING_DIRECTORY}/OrangeFox
            cd ${CIRCLE_WORKING_DIRECTORY}/OrangeFox
            git clone https://gitlab.com/OrangeFox/sync.git

      - run:
          name: Prepare for building
          command: |
            cd ${CIRCLE_WORKING_DIRECTORY}/scripts
            sudo bash setup/android_build_env.sh

            cd ${CIRCLE_WORKING_DIRECTORY}/OrangeFox/sync
            ./orangefox_sync.sh --branch << pipeline.parameters.manifest-branch >> --path ${CIRCLE_WORKING_DIRECTORY}/OrangeFox/fox_<< pipeline.parameters.manifest-branch >>

      - run:
          name: Get device tree
          command: |
            cd ${CIRCLE_WORKING_DIRECTORY}/OrangeFox/fox_<< pipeline.parameters.manifest-branch >>
            rm -rf ./<< pipeline.parameters.device-path >>
            git clone << pipeline.parameters.device-tree >> -b << pipeline.parameters.device-tree-branch >> ./<< pipeline.parameters.device-path >>

      # - save_cache:
      #       key: << pipeline.parameters.device-name >>-orangefox-<< pipeline.parameters.manifest-branch >>-<< pipeline.parameters.target >>-src
      #       paths:
      #           - OrangeFox
      #           - scripts

  build:
    machine:
      image: ubuntu-2204:current
    resource_class: large

    steps:
      - restore_cache:
          key: << pipeline.parameters.device-name >>-OFOX-<< pipeline.parameters.manifest-branch >>-<< pipeline.parameters.target >>-ccache

      - run:
          name: Build
          command: |
            cd ${CIRCLE_WORKING_DIRECTORY}/OrangeFox/fox_<< pipeline.parameters.manifest-branch >>
            set +e
            source build/envsetup.sh

            export USE_CCACHE=1
            export CCACHE_EXEC=/usr/bin/ccache
            ccache -M 1G
            export CCACHE_DIR=/mnt/ccache

            export ALLOW_MISSING_DEPENDENCIES=true

            export FOX_DRASTIC_SIZE_REDUCTION=1
            export OF_AB_DEVICE=1
            export OF_VANILLA_BUILD=1
            export FOX_USE_BASH_SHELL=1
            export FOX_ASH_IS_BASH=1

            set -e

            rm -rf ${CIRCLE_WORKING_DIRECTORY}/OrangeFox/fox_<< pipeline.parameters.manifest-branch >>/out
            lunch twrp_<< pipeline.parameters.device-name >>-eng && make clean && mka adbd << pipeline.parameters.target >>image

      - persist_to_workspace:
          root: ${CIRCLE_WORKING_DIRECTORY}/OrangeFox/fox_<< pipeline.parameters.manifest-branch >>/out/target/product/
          paths:
            - << pipeline.parameters.device-name >>

      - save_cache:
          paths:
            - /mnt/ccache
          key: << pipeline.parameters.device-name >>-OFOX-<< pipeline.parameters.manifest-branch >>-<< pipeline.parameters.target >>-ccache

  publish:
    docker:
      - image: ubuntu:latest
    resource_class: small

    steps:
      - attach_workspace:
          at: releases
      - run:
          name: "Publish Release on GitHub"
          command: |
            go get github.com/tcnksm/ghr
            VERSION=$(my-binary --version)
            ghr -t ${GITHUB_TOKEN} -u ${GITHUB_USERNAME} -r ${GITHUB_REPO} -c ${CIRCLE_SHA1} -delete ${CIRCLE_SHA1} releases/<< pipeline.parameters.device-name >>/*.img
            ghr -t ${GITHUB_TOKEN} -u ${GITHUB_USERNAME} -r ${GITHUB_REPO} -c ${CIRCLE_SHA1} -delete ${CIRCLE_SHA1} releases/<< pipeline.parameters.device-name >>/*.tar
            ghr -t ${GITHUB_TOKEN} -u ${GITHUB_USERNAME} -r ${GITHUB_REPO} -c ${CIRCLE_SHA1} -delete ${CIRCLE_SHA1} releases/<< pipeline.parameters.device-name >>/*.zip

workflows:
  build-recovery:
    jobs:
      - hold:
          type: approval
      - setup:
          requires:
            - hold
      - build:
          requires:
            - setup
      - publish:
          requires:
            - build
