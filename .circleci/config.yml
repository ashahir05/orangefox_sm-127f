version: 2.1

parameters:
  manifest-branch:
    type: string
    default: "12.1"
  device-tree:
    type: string
    default: "https://github.com/ashahir05/twrp_sm-127f"
  device-tree-branch:
    type: string
    default: "main"
  vendor-name:
    type: string
    default: "samsung"
  device-name:
    type: string
    default: "a12s"
  target:
    type: string
    default: "recoveryimage"
  build-type:
    type: string
    default: "eng"

jobs:
  build:
    machine:
      image: ubuntu-2204:current
    resource_class: large

    steps:
      - run:
          name: Setup build environment
          command: |
            export DEBIAN_FRONTEND=noninteractive
            sudo apt update -y
            sudo apt install -y \
              tree \
              gperf \
              gcc-multilib \
              gcc-10-multilib \
              g++-multilib \
              g++-10-multilib \
              ccache \
              libc6-dev \
              lib32ncurses5-dev \
              x11proto-core-dev \
              libx11-dev \
              tree \
              lib32z-dev \
              libgl1-mesa-dev \
              libxml2-utils \
              xsltproc \
              bc \
              openjdk-8-jdk \
              lib32readline-dev \
              lib32z1-dev \
              liblz4-tool \
              libncurses5-dev \
              libncurses5 \
              libtinfo5 \
              libsdl1.2-dev \
              libwxgtk3.0-gtk3-dev \
              libxml2 \
              linux-modules-extra-$(uname -r) \
              lzop \
              pngcrush \
              schedtool \
              squashfs-tools \
              imagemagick \
              libbz2-dev \
              lzma \
              ncftp \
              qemu-user-static \
              libstdc++-10-dev \
              python2 \
              python3 \
              repo \
              linux-modules-extra-$(uname -r)
            sudo ln -s /usr/bin/python2 /usr/bin/python
            
      - run:
          name: Prepare system
          command: |
            sudo dd if=/dev/zero of=/swapfile bs=12MB count=1024
            sudo chmod 600 /swapfile
            sudo mkswap /swapfile
            sudo swapon /swapfile

            sudo modprobe zram
            sudo zramctl /dev/zram0 --algorithm zstd --size 56G
            sudo mkswap /dev/zram0
            sudo swapon --priority 150 /dev/zram0
            
            sudo sysctl vm.swappiness=180
            sudo sysctl vm.watermark_boost_factor=0
            sudo sysctl vm.watermark_scale_factor=125
            sudo sysctl vm.page-cluster=0

      - run:
          name: Fetch sources
          command: |
            git config --global user.name "Ahmed Shahir"
            git config --global user.email "ashahir-build-circleci@xyz.pqr"
            git config --global color.ui true

            git clone https://gitlab.com/OrangeFox/misc/scripts

            mkdir -p ${CIRCLE_WORKING_DIRECTORY}/OrangeFox
            cd ${CIRCLE_WORKING_DIRECTORY}/OrangeFox
            mkdir sync
            git clone https://github.com/ashahir05/orangefox-sync sync

      - run:
          name: Prepare for building
          command: |
            export DEBIAN_FRONTEND=noninteractive
            cd ${CIRCLE_WORKING_DIRECTORY}/scripts
            sudo bash setup/android_build_env.sh

            cd ${CIRCLE_WORKING_DIRECTORY}/OrangeFox/sync
            ./orangefox_sync.sh --branch << pipeline.parameters.manifest-branch >> --path ${CIRCLE_WORKING_DIRECTORY}/OrangeFox/fox_<< pipeline.parameters.manifest-branch >>
            
            rm -rf ${CIRCLE_WORKING_DIRECTORY}/OrangeFox/fox_<< pipeline.parameters.manifest-branch >>/bootable/recovery
            git clone https://gitlab.com/OrangeFox/bootable/Recovery -b fox_<< pipeline.parameters.manifest-branch >> ${CIRCLE_WORKING_DIRECTORY}/OrangeFox/fox_<< pipeline.parameters.manifest-branch >>/bootable/recovery

      - run:
          name: Get device tree
          command: |
            cd ${CIRCLE_WORKING_DIRECTORY}/OrangeFox/fox_<< pipeline.parameters.manifest-branch >>
            rm -rf ./device/<< pipeline.parameters.vendor-name >>/<< pipeline.parameters.device-name >>
            git clone << pipeline.parameters.device-tree >> -b << pipeline.parameters.device-tree-branch >> ./device/<< pipeline.parameters.vendor-name >>/<< pipeline.parameters.device-name >>

      - run:
          name: Build
          command: |
            cd ${CIRCLE_WORKING_DIRECTORY}/OrangeFox/fox_<< pipeline.parameters.manifest-branch >>
            set +e
            source build/envsetup.sh

            export ALLOW_MISSING_DEPENDENCIES=true

            export FOX_AB_DEVICE=1
            export FOX_REMOVE_AAPT=1
            export OF_USE_LZMA_COMPRESSION=1
            export FOX_VANILLA_BUILD=1
            export OF_PATCH_AVB20=1
            
            export OF_SCREEN_H=1600
            export OF_STATUS_INDENT_LEFT=48
            export OF_STATUS_INDENT_RIGHT=48
            export OF_CLOCK_POS=1
            export OF_ALLOW_DISABLE_NAVBAR=1

            set -e

            lunch twrp_<< pipeline.parameters.device-name >>-<< pipeline.parameters.build-type >> && make clean && mka << pipeline.parameters.target >>

      - persist_to_workspace:
          root: OrangeFox/fox_<< pipeline.parameters.manifest-branch >>/out/target/product/
          paths:
            - << pipeline.parameters.device-name >>

      - run:
          name: Debug
          when: on_fail
          command: tree -L 4 ${CIRCLE_WORKING_DIRECTORY}

  publish:
    machine:
      image: ubuntu-2204:current
    resource_class: medium

    steps:
      - attach_workspace:
          at: releases
      - run:
          name: "Publish Release on GitHub"
          command: |
            go get github.com/tcnksm/ghr
            ghr -t ${GITHUB_TOKEN} -u ${GITHUB_USERNAME} -r ${GITHUB_REPO} -c ${CIRCLE_SHA1} -delete ${CIRCLE_SHA1} releases/<< pipeline.parameters.device-name >>/*.img
            ghr -t ${GITHUB_TOKEN} -u ${GITHUB_USERNAME} -r ${GITHUB_REPO} -c ${CIRCLE_SHA1} -delete ${CIRCLE_SHA1} releases/<< pipeline.parameters.device-name >>/*.tar
            ghr -t ${GITHUB_TOKEN} -u ${GITHUB_USERNAME} -r ${GITHUB_REPO} -c ${CIRCLE_SHA1} -delete ${CIRCLE_SHA1} releases/<< pipeline.parameters.device-name >>/*.zip
            
      - run:
          name: Debug
          when: on_fail
          command: tree -L 4 ${CIRCLE_WORKING_DIRECTORY}

workflows:
  build-recovery:
    jobs:
      - hold:
          type: approval
      - build:
          requires:
            - hold
      - publish:
          requires:
            - build
